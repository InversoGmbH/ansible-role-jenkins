#!groovy
import jenkins.model.*
import hudson.security.*
import com.cloudbees.plugins.credentials.*
import org.jenkinsci.plugins.matrixauth.*

def instance = Jenkins.getInstance()

{% if jenkins_ad_authorizationstrategy  == 'project' %}
def strategy = new hudson.security.ProjectMatrixAuthorizationStrategy()
{% endif %}

{% if jenkins_ad_authorizationstrategy  == 'matrix' %}
def strategy = new GlobalMatrixAuthorizationStrategy()
{% endif %}

// Roles based on https://wiki.jenkins-ci.org/display/JENKINS/Matrix-based+security
// Overall - http://javadoc.jenkins-ci.org/jenkins/model/Jenkins.html
strategy.add(Jenkins.ADMINISTER, PermissionEntry.user('{{ jenkins_admin_username | default("jenkins-admin") }}'))
strategy.add(Jenkins.MANAGE, PermissionEntry.user('{{ jenkins_admin_username | default("jenkins-admin") }}'))
strategy.add(Jenkins.SYSTEM_READ, PermissionEntry.user('{{ jenkins_admin_username | default("jenkins-admin") }}'))
strategy.add(Jenkins.RUN_SCRIPTS, PermissionEntry.user('{{ jenkins_admin_username | default("jenkins-admin") }}'))
strategy.add(Jenkins.READ, PermissionEntry.group('authenticated'))

strategy.add(Jenkins.ADMINISTER, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
{# strategy.add(Jenkins.READ, PermissionEntry.group('{{ jenkins_ad_group_admin }}')) // inherited from Jenkins.ADMINISTER #}
strategy.add(Jenkins.READ, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(Jenkins.READ, PermissionEntry.group('{{ jenkins_ad_group_users }}'))


{% if jenkins_ad_allow_anonymous  == 'yes' %}
strategy.add(Jenkins.READ, PermissionEntry.group('anonymous'))
{% endif %}

// Agent (Slave < 2.0) - http://javadoc.jenkins-ci.org/jenkins/model/Jenkins.MasterComputer.html
{# inherited from global admin permissions
strategy.add(Jenkins.MasterComputer.CONFIGURE, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
strategy.add(Jenkins.MasterComputer.CREATE, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
strategy.add(Jenkins.MasterComputer.DELETE, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
strategy.add(Jenkins.MasterComputer.BUILD, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
strategy.add(Jenkins.MasterComputer.CONNECT, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
strategy.add(Jenkins.MasterComputer.DISCONNECT, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
#}

strategy.add(Jenkins.MasterComputer.CONFIGURE, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(Jenkins.MasterComputer.CREATE, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(Jenkins.MasterComputer.DELETE, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(Jenkins.MasterComputer.BUILD, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(Jenkins.MasterComputer.DISCONNECT, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
{# strategy.add(Jenkins.MasterComputer.CONNECT, PermissionEntry.group('{{ jenkins_ad_group_developers }}')) // inherited from DISCONNECT#}

// Job - http://javadoc.jenkins-ci.org/hudson/model/Item.html
{# --- ITEM Permissions are inherted from global admin permissions
//strategy.add(hudson.model.Item.DISCOVER, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
//strategy.add(hudson.model.Item.WORKSPACE, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
//strategy.add(hudson.model.Item.READ, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
//strategy.add(hudson.model.Item.BUILD, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
//strategy.add(hudson.model.Item.CANCEL, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
//strategy.add(hudson.model.Item.CONFIGURE, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
//strategy.add(hudson.model.Item.CREATE, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
//strategy.add(hudson.model.Item.DELETE, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
#}

{# strategy.add(hudson.model.Item.DISCOVER, PermissionEntry.group('{{ jenkins_ad_group_developers }}')) // inherited from READ permission #}
strategy.add(hudson.model.Item.WORKSPACE, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(hudson.model.Item.READ, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(hudson.model.Item.BUILD, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(hudson.model.Item.CANCEL, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(hudson.model.Item.CREATE, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(hudson.model.Item.CONFIGURE, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(hudson.model.Item.DELETE, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
{# TODO: Check if cloudbees folder plugin is installed #}
{# strategy.add(hudson.model.Item.RELOCATE, PermissionEntry.group('{{ jenkins_ad_group_developers }}')) // cloudbees folder plugin #}

{# strategy.add(hudson.model.Item.DISCOVER, PermissionEntry.group('{{ jenkins_ad_group_users }}')) // inherited from READ permission #}
strategy.add(hudson.model.Item.READ, PermissionEntry.group('{{ jenkins_ad_group_users }}'))

{# strategy.add(hudson.model.Item.DISCOVER, PermissionEntry.group('authenticated')) // inherited from READ permission #}
strategy.add(hudson.model.Item.READ, PermissionEntry.group('authenticated'))

{# strategy.add(hudson.model.Item.DISCOVER, PermissionEntry.group('anonymous')) // inherited from READ permission #}
{% if jenkins_ad_allow_anonymous  == 'yes' %}
strategy.add(hudson.model.Item.READ, PermissionEntry.group('anonymous'))
{% endif %}


// Run - http://javadoc.jenkins-ci.org/hudson/model/Run.html
{# strategy.add(hudson.model.Run.UPDATE, PermissionEntry.group('{{ jenkins_ad_group_admin }}')) // inherited from Jenkins.ADMINISTER Permission #}
{# strategy.add(hudson.model.Run.DELETE, PermissionEntry.group('{{ jenkins_ad_group_admin }}')) // inherited from Jenkins.ADMINISTER Permission #}

strategy.add(hudson.model.Run.DELETE, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(hudson.model.Run.UPDATE, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))

// View - http://javadoc.jenkins-ci.org/hudson/model/View.html
{# inherited from global admin permisison
strategy.add(hudson.model.View.READ, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
strategy.add(hudson.model.View.CONFIGURE, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
strategy.add(hudson.model.View.CREATE, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
strategy.add(hudson.model.View.DELETE, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
#}

strategy.add(hudson.model.View.READ, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(hudson.model.View.CONFIGURE, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(hudson.model.View.CREATE, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))
strategy.add(hudson.model.View.DELETE, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))

strategy.add(hudson.model.View.READ, PermissionEntry.group('authenticated'))
strategy.add(hudson.model.View.READ, PermissionEntry.group('{{ jenkins_ad_group_users }}'))

// SCM - http://javadoc.jenkins-ci.org/hudson/model/View.html
{# strategy.add(hudson.scm.SCM.TAG, PermissionEntry.group('{{ jenkins_ad_group_admin }}')) // inherited from global admin permissin #}
strategy.add(hudson.scm.SCM.TAG, PermissionEntry.group('{{ jenkins_ad_group_developers }}'))

// Plugin Manager http://javadoc.jenkins-ci.org/hudson/PluginManager.html
strategy.add(hudson.PluginManager.UPLOAD_PLUGINS, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))
strategy.add(hudson.PluginManager.CONFIGURE_UPDATECENTER, PermissionEntry.group('{{ jenkins_ad_group_admin }}'))

strategy.add(hudson.PluginManager.UPLOAD_PLUGINS, PermissionEntry.user('{{ jenkins_admin_username | default("jenkins-admin") }}'))
strategy.add(hudson.PluginManager.CONFIGURE_UPDATECENTER, PermissionEntry.user('{{ jenkins_admin_username | default("jenkins-admin") }}'))

instance.setAuthorizationStrategy(strategy)
instance.save()
