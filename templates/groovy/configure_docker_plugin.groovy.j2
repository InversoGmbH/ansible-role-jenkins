import com.nirima.jenkins.plugins.docker.DockerCloud
import com.nirima.jenkins.plugins.docker.DockerTemplate
import com.nirima.jenkins.plugins.docker.DockerTemplateBase
import com.nirima.jenkins.plugins.docker.launcher.AttachedDockerComputerLauncher
import io.jenkins.docker.connector.DockerComputerAttachConnector
import io.jenkins.docker.client.DockerAPI;
import org.jenkinsci.plugins.docker.commons.credentials.DockerServerEndpoint;
import jenkins.model.Jenkins

// parameters
def dockerTemplateBaseParameters = [
  //image:              'docker-hosted-jenkins-snapshot.nexusops.inverso.local/java-woelkchen:latest',

  image:              '{{ jenkins_docker_image }}', // jinja2 variable
]

def DockerTemplateParameters = [
  labelString:    'Linux Java Java8',
  remoteFs:       '',
  instanceCapStr: '4',
  hostname:       'vpsl-woelkchen'
]

def dockerApiParameters = [
  connectTimeout:   3,
  credentialsId:    '',
  dockerHostname:   '',
  readTimeout:      60,
  serverUrl:        'tcp://slave-build01.inverso.local:4243',
  version:          ''
]

def dockerCloudParameters = [
  name          :   'WÃ¶lkchen',
  instanceCapStr:   '100'
]

// https://github.com/jenkinsci/docker-plugin/blob/docker-plugin-1.1.2/src/main/java/com/nirima/jenkins/plugins/docker/DockerTemplateBase.java
// https://github.com/jenkinsci/docker-plugin/blob/docker-plugin-1.1.2/src/main/java/com/nirima/jenkins/plugins/docker/DockerTemplate.java
// https://github.com/jenkinsci/docker-plugin/blob/docker-plugin-1.1.2/src/main/java/com/nirima/jenkins/plugins/docker/DockerCloud.java

DockerTemplateBase dockerTemplateBase = new DockerTemplateBase(
  dockerTemplateBaseParameters.image
)
dockerTemplateBase.setPrivileged(false)

DockerTemplate dockerTemplate = new DockerTemplate(
  dockerTemplateBase,
  new DockerComputerAttachConnector(),
  DockerTemplateParameters.labelString,
  DockerTemplateParameters.remoteFs,
  DockerTemplateParameters.instanceCapStr
)

DockerServerEndpoint dockerServerEndpoint = new DockerServerEndpoint(
  dockerApiParameters.serverUrl,
  dockerApiParameters.credentialsId
)

DockerAPI dockerApi = new DockerAPI(
  dockerServerEndpoint,
  dockerApiParameters.connectTimeout,
  dockerApiParameters.readTimeout,
  dockerApiParameters.version,
  dockerApiParameters.dockerHostname
)

DockerCloud dockerCloud = new DockerCloud(
  dockerCloudParameters.name,
  dockerApi,
  [dockerTemplate]
)

// get Jenkins instance
Jenkins jenkins = Jenkins.getInstance()

try {
  existingCloud = jenkins.clouds.getByName(dockerCloudParameters.name)
  existingCloud.setContainerCap(dockerCloudParameters.instanceCapStr)
}
catch(Exception ex){
  jenkins.clouds.add(dockerCloud)
}


// add cloud configuration to Jenkins

// save current Jenkins state to disk
jenkins.save()

